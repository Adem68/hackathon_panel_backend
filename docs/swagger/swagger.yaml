definitions:
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - password
    - role
    - username
    - email
    type: object
info:
  contact: {}
  description: This is a Ondemand sample server
  license: {}
  title: Ondemand API
  version: "1.0"
paths:
  /:
    get:
      description: Display Home Page
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Home Page
      tags:
      - Home
  /api/login:
    post:
      description: Login User in API
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login
      tags:
      - Auth
  /api/logout:
    get:
      description: User Logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - Auth
  /api/users:
    get:
      description: Listado de Usuarios
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: UserList
      tags:
      - User
    post:
      description: Guardar datos de Usuario
      parameters:
      - description: Username
        in: query
        name: username
        required: true
        type: string
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Role
        in: query
        name: role
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: UserStore
      tags:
      - User
  /api/users/{id}:
    delete:
      description: Borrado de Usuario
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: UserDelete
      tags:
      - User
    get:
      description: Consultar Usuario
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: UserShow
      tags:
      - User
    put:
      description: Actualizar datos de Usuario
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Username
        in: query
        name: username
        required: true
        type: string
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Role
        in: query
        name: role
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: UserUpdate
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
